import { cellValue } from "../types";
declare function DATE(year: number, month: number, day: number): number;
declare function TIME(hour: number, minute: number, second: number): number;
declare function DAY(date: number): number;
declare function MONTH(date: number): number;
declare function YEAR(date: number): number;
declare function HOUR(date: number): number;
declare function MINUTE(date: number): number;
declare function SECOND(date: number): number;
declare function NOW(): number;
declare function DATEDIF(startN: number, endN: number, unit: string): number;
declare function DATEVALUE(string: string): number;
declare function DAYS(date: cellValue, date2: cellValue): number;
declare function DAYS360(date: cellValue, date2: cellValue, method?: number): number;
declare function EDATE(date: cellValue, month: cellValue): number;
declare function EOMONTH(date: cellValue, month: cellValue): number;
declare function ISOWEEKNUM(date: cellValue): number;
declare function NETWORKDAYS(date1: cellValue, date2: cellValue, holidays?: cellValue[]): number;
declare function NETWORKDAYSINTL(date1: cellValue, date2: cellValue, weekend: number, holidays?: cellValue[]): number;
declare function TIMEVALUE(text: cellValue): number;
declare function WEEKNUM(date: cellValue, type?: number): number;
declare function WEEKDAY(date: cellValue, type?: number): number;
declare function WORKDAY(date1: cellValue, days: cellValue, holidays: cellValue[]): number;
declare function WORKDAYINTL(date1: cellValue, days: cellValue, weekend: number, holidays: cellValue[]): number;
export declare function YEARFRAC(date1: cellValue, date2: cellValue, basis?: number): number;
declare const methods: {
    DATE: typeof DATE;
    TIME: typeof TIME;
    DAY: typeof DAY;
    MONTH: typeof MONTH;
    YEAR: typeof YEAR;
    HOUR: typeof HOUR;
    MINUTE: typeof MINUTE;
    SECOND: typeof SECOND;
    NOW: typeof NOW;
    DATEDIF: typeof DATEDIF;
    DATEVALUE: typeof DATEVALUE;
    DAYS: typeof DAYS;
    DAYS360: typeof DAYS360;
    EDATE: typeof EDATE;
    EOMONTH: typeof EOMONTH;
    ISOWEEKNUM: typeof ISOWEEKNUM;
    NETWORKDAYS: typeof NETWORKDAYS;
    "NETWORKDAYS.INTL": typeof NETWORKDAYSINTL;
    TIMEVALUE: typeof TIMEVALUE;
    WEEKNUM: typeof WEEKNUM;
    WEEKDAY: typeof WEEKDAY;
    WORKDAY: typeof WORKDAY;
    "WORKDAY.INTL": typeof WORKDAYINTL;
    YEARFRAC: typeof YEARFRAC;
};
export default methods;
