import { cellValue } from "../types";
export declare function CONCATENATE(...rest: cellValue[]): string;
export declare function LEFT(text: string, count: number): string;
export declare function MID(text: string, start: number, count: number): string;
export declare function RIGHT(text: string, count: number): string;
export declare function LOWER(text: string): string;
export declare function UPPER(text: string): string;
export declare function PROPER(text: string): string;
export declare function TRIM(text: string): string;
export declare function LEN(text: cellValue): number;
export declare function CHAR(num: cellValue): string;
export declare function CLEAN(text?: cellValue): string;
export declare function CODE(text?: cellValue): number;
export declare function EXACT(text1: cellValue, text2: cellValue): boolean;
export declare function FIND(text: cellValue, text2: cellValue, pos?: cellValue): number;
export declare function FIXED(number: cellValue, decimals?: cellValue, comas?: cellValue): number | string;
export declare function NUMBERVALUE(text: cellValue, decimals?: cellValue, group_separator?: cellValue): number;
export declare function REGEXEXTRACT(text: cellValue, regexp: cellValue): string;
export declare function REGEXMATCH(text: cellValue, regexp: cellValue): boolean;
export declare function REGEXREPLACE(text: cellValue, regexp: cellValue, replacement: cellValue): string;
export declare function REPT(text: cellValue, number: cellValue): string;
export declare function SEARCH(text: cellValue, within: cellValue, position?: cellValue): number;
export declare function SUBSTITUTE(text: cellValue, old: cellValue, new_text: cellValue, occurrence: cellValue): string;
export declare function T(val: cellValue): string;
export declare function JOIN(separator: string, ...rest: cellValue[]): string;
export declare function REPLACE(old_text: cellValue, start_num: cellValue, num_chars: cellValue, new_text: cellValue): string;
export declare function ARRAYTOTEXT(arr: cellValue[], format: cellValue): string;
